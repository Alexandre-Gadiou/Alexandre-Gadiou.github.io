{"version":3,"sources":["webpack:///./src/layouts/HomeLayout/index.js","webpack:///./src/components/SkillsCloud/index.js","webpack:///./src/components/ContactForm/index.js","webpack:///./src/pages/index.js"],"names":["HomeLayout","props","_this","_React$Component","call","this","state","title","description","keywords","children","componentDidMount","window","location","hash","setTimeout","document","querySelector","scrollIntoView","render","react_default","a","createElement","Fragment","Helmet_default","meta","name","content","lang","className","NavigationMenu","Footer","React","Component","SkillsCloud","skills","fontSizeMapper","word","v","value","Math","log2","lib_default","data","height","ContactForm","messageSent","mailTo","redirectTo","onDismiss","bind","assertThisInitialized_default","setState","reactstrap_es","color","isOpen","toggle","fade","action","method","type","htmlFor","id","placeholder","rows","query","IndexPage","URLSearchParams","search","cv","allContentfulCv","edges","node","educations","allContentfulEducation","experiences","allContentfulExperience","totalExperienceTime","map","element","key","getWorkingYear","reduce","accumulator","currentValue","allContentfulSkill","text","level","achievments","allContentfulAchievement","currentURL","href","get","start","Date","end","startDate","endDate","floor","Number","parseFloat","getTime","getWorkingMonth","toFixed","getWorkingLabel","label","years","months","getWorkingYearLabel","getYearStyle","width","getProgressBarStyle","barClass","_this2","layouts_HomeLayout","src","photo","sizes","alt","firstName","lastName","target","rel","image","dangerouslySetInnerHTML","__html","childMarkdownRemark","html","components_SkillsCloud","slice","style","role","aria-valuenow","aria-valuemin","aria-valuemax","url","technologies","join","components_ContactForm","email"],"mappings":"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","file":"component---src-pages-index-js-bc054669b33225a1bcb2.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport NavigationMenu from '../../components/NavigationMenu/index.js'\nimport Footer from '../../components/Footer/index.js'\n\nimport \"../../styles/main.scss\";\n\n\nclass HomeLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.title,\n      description: props.description,\n      keywords: props.keywords,\n      children: props.children,\n    };\n  }\n\n  componentDidMount() {\n    if (window.location.hash) {\n      setTimeout(() => {\n        document.querySelector(`${window.location.hash}`).scrollIntoView();\n      }, 0);\n    }\n  }\n\n  render() {\n\n    return (\n      <>\n        <Helmet\n          title={this.state.title}\n          meta={[\n            { name: 'description', content: this.state.description },\n            { name: 'keywords', content: this.state.keywords },\n          ]}\n        >\n          <html lang=\"fr\" />\n        </Helmet>\n        <div className=\"bodywrapper\">\n          <NavigationMenu />\n          {this.state.children}\n          <Footer/>\n        </div>\n      </>\n    );\n  }\n\n\n}\n\nexport default HomeLayout;","import React from 'react';\nimport WordCloud from 'react-d3-cloud';\n\n\nclass SkillsCloud extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            skills: props.skills\n        };\n    }\n\n    fontSizeMapper(word){\n        let v = word.value;\n        if (word.value === 5) {\n            v = word.value * 1;\n        }\n        if (word.value === 2) {\n            v = word.value * 10;\n        }\n        if (word.value === 3) {\n            v = word.value * 200;\n        }\n        if (word.value === 4) {\n            v = word.value * 1000;\n        }\n        return 12 + Math.log2(v) * 3\n    }\n    render() {\n        if (typeof window !== `undefined`) {\n            return (\n                <div className=\"word-cloud\">\n                    <WordCloud\n                        data={this.state.skills}\n                        height='300'\n                        fontSizeMapper={this.fontSizeMapper}\n                    />\n                </div>\n            );   \n        } else{\n            return (<></>);\n        }\n    }\n}\n\nexport default SkillsCloud;","import React from 'react';\nimport { Alert } from 'reactstrap';\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      messageSent: props.messageSent,\n      mailTo: props.mailTo,\n      redirectTo: props.redirectTo\n    };\n\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  onDismiss() {\n    this.setState({ messageSent: false });\n  }\n\n  render() {\n    return (\n      <>\n        <Alert color=\"success\" isOpen={this.state.messageSent} toggle={this.onDismiss} fade={true}>\n          Votre message a été envoyé avec succès !\n        </Alert>\n        <form className=\"contact-form\" action={\"https://formspree.io/\" + this.state.mailTo} method=\"POST\" >\n          <input type=\"hidden\" name=\"_next\" value={this.state.redirectTo + '?messageSent=true'} />\n          <input type=\"hidden\" name=\"_subject\" value=\"alexandre-gadiou message\" />\n          <input className=\"d-none\" type=\"text\" name=\"_gotcha\" />\n          <div className=\"form-group row\">\n            <label htmlFor=\"inputLastName\" className=\"sr-only\">Nom</label>\n            <div className=\"offset-sm-2 col-sm-8\">\n              <input type=\"text\" name=\"lastName\" className=\"form-control\" id=\"inputLastName\" placeholder=\"Nom\" />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label htmlFor=\"inputFirstName\" className=\"sr-only\">Prénom</label>\n            <div className=\"offset-sm-2 col-sm-8\">\n              <input type=\"text\" name=\"firstName\" className=\"form-control\" id=\"inputFirstName\" placeholder=\"Prénom\" />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label htmlFor=\"inputEmail\" className=\"sr-only\">Email</label>\n            <div className=\"offset-sm-2 col-sm-8\">\n              <input type=\"email\" name=\"_replyto\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label htmlFor=\"inputMessage\" className=\"sr-only\">Message</label>\n            <div className=\"offset-sm-2 col-sm-8\">\n              <textarea rows=\"10\" className=\"form-control\" id=\"inputMessage\" name=\"message\" placeholder=\"Votre message\"></textarea>\n            </div>\n          </div>\n\n          <div className=\"buttons-bar form-group row\">\n            <div className=\"col-sm-12\">\n              <button type=\"submit\" className=\"btn btn-lg btn-primary\">Envoyer</button>\n            </div>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;","import React from 'react'\nimport { graphql } from 'gatsby';\nimport HomeLayout from '../layouts/HomeLayout'\nimport SkillsCloud from '../components/SkillsCloud'\nimport ContactForm from '../components/ContactForm'\n\n\nexport const query = graphql`\nquery cvQuery {\n  allContentfulCv {\n    edges {\n      node {\n        id\n        firstName\n        lastName\n        dateOfBirth\n        photo {\n          id\n          sizes {\n            src\n          }\n        }\n        email,\n        phone\n      }\n    }\n  },\n  allContentfulEducation(sort: {fields: startDate,order:ASC}) {\n    edges {\n      node {\n        id\n        title\n        startDate\n        endDate\n        image {\n          id\n          sizes {\n            src\n          }\n        }\n        description {\n          childMarkdownRemark{\n            html\n          }\n        }\n      }\n    }\n  },\n  allContentfulExperience(limit:4, sort: {fields: startDate,order:DESC}) {\n    edges {\n      node {\n        id\n        title\n        startDate\n        endDate\n        image {\n          id\n          sizes {\n            src\n          }\n        }\n        description {\n          childMarkdownRemark{\n            html\n          }\n        }\n      }\n    }\n  },\n  allContentfulAchievement(limit:4, sort: {fields: period,order:DESC}) {\n    edges {\n      node {\n        id\n        title\n        url\n        subtitle\n        period\n        image {\n          id\n          sizes {\n            src\n          }\n        }\n        description {\n          childMarkdownRemark{\n            html\n          }\n        }\n        technologies\n      }\n    }\n  },\n  allContentfulSkill {\n    edges {\n      node {\n        title\n        level\n      }\n    }\n  }\n}\n`\n\nclass IndexPage extends React.Component {\n  constructor(props) {\n    super(props);\n    let query = new URLSearchParams(props.location.search);\n\n    this.state = {\n      cv: props.data.allContentfulCv.edges[0].node,\n      educations: props.data.allContentfulEducation.edges,\n      experiences: props.data.allContentfulExperience.edges,\n      totalExperienceTime: props.data.allContentfulExperience.edges.map((element, key) => { return this.getWorkingYear(element); }).reduce((accumulator, currentValue) => accumulator + currentValue),\n      skills: props.data.allContentfulSkill.edges.map((element, key) => { return { text: element.node.title, value: element.node.level } }),\n      achievments: props.data.allContentfulAchievement.edges,\n      currentURL: props.location.href,\n      messageSent: query.get('messageSent') === 'true',\n    };\n\n    /*today: new Date().getFullYear(),\n      dob: new Date(this.state.cv.dateOfBirth).getFullYear(),*/\n  }\n\n  getWorkingYear(element) {\n    let start = new Date();\n    let end = new Date();\n    if (element.node.startDate != null) {\n      start = new Date(element.node.startDate);\n    }\n    if (element.node.endDate != null) {\n      end = new Date(element.node.endDate);\n    }\n    let years = Math.floor(Number.parseFloat(((end.getTime() - start.getTime()) / 1000) / (3600 * 24*365)));\n    return years;\n  }\n\n  getWorkingMonth(element) {\n    let start = new Date();\n    let end = new Date();\n    if (element.node.startDate != null) {\n      start = new Date(element.node.startDate);\n    }\n    if (element.node.endDate != null) {\n      end = new Date(element.node.endDate);\n    }\n    let months = Number.parseFloat(((end.getTime() - start.getTime()) / 1000) / (3600 * 24 * 30.4),1).toFixed(0);\n    let diff = months % 12;\n\n    return diff;\n  }\n\n\n  getWorkingLabel(element) {\n    let years = this.getWorkingYear(element);\n    let months = this.getWorkingMonth(element);\n    let label;\n    \n     if(years===0 && months>0){\n      label = months + ' mois';\n    } else if(years===1 && months===0) {\n      label = years + ' an';\n    } else if(years===1 && months>0) {\n      label = years + ' an et '+ months + ' mois';\n    } else if(years>1 && months>0) {\n      label = years + ' ans et '+ months + ' mois';\n    }\n\n    return label;\n  }\n\n\n  getWorkingYearLabel(element) {\n    let years = this.getWorkingYear(element);\n    if (years === 1) {\n      years = years + ' an';\n    } else {\n      years = years + ' ans';\n    }\n    return years;\n  }\n\n  //todo remove offset+15\n  getYearStyle(element) {\n    const w = 15+(this.getWorkingYear(element) / this.state.totalExperienceTime) * 100;\n    return {\n      width: w + '%'\n    }\n  }\n\n  getProgressBarStyle(element) {\n    let barClass = 'progress-bar'\n    if (element.node.endDate === null) {\n      barClass = barClass + ' current-exp-progress-bar progress-bar-striped progress-bar-animated';\n    }\n    return barClass;\n  }\n\n  render() {\n    return (\n\n      <HomeLayout\n        title=\"Accueil\"\n        description=\"Alexandre Gadiou, Ingénieur, Java, J2EE, Développement, Développeur, Web, Le Mans\"\n        keywords=\"Alexandre Gadiou - Ingénieur Java/J2EE\"\n      >\n\n        <header id=\"presentation\" className=\"presentation\">\n          <img className=\"photo-cv rounded-circle\" src={this.state.cv.photo.sizes.src} alt={this.state.cv.firstName + ' ' + this.state.cv.lastName} />\n          <h1 >{this.state.cv.firstName + ' ' + this.state.cv.lastName}</h1>\n          <h2>Web Developer - Le Mans - France</h2>\n        </header>\n\n        <section id=\"a-propos\" className=\"about\">\n          <div className=\"container\">\n            <h2>À propos</h2>\n            <hr />\n            <div className=\"text-center\">\n              <p>\n                Je suis développeur web spécialisé dans les technologies front-end.\n              </p>\n              <p>\n                Le but de ce site est d'exposer mon CV et de vous confirmer mon intéret pour le web. \n              </p>\n              <p>\n                L'architecture de ce site est de type <a href=\"https://jamstatic.fr/2018/05/31/startups-jamstack/\" target=\"_blank\" rel=\"noopener noreferrer\">JAMStack</a>. Il a été codé avec <a href=\"https://www.gatsbyjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">GatsbyJS</a>, un CMS basé sur la technologie React.\n              </p>\n              <p>\n                Spécialisé sur le CMS <a href=\"http://www.jahia.com\" target=\"_blank\" title=\"jahia.com\" rel=\"noopener noreferrer\">Jahia</a>, je travaille actuellement au Mans chez GFI.\n              </p>\n            </div>\n          </div>\n        </section>\n\n        <section id=\"formation\" className=\"education\">\n          <div className=\"container\">\n            <h2>Formation</h2>\n            <hr />\n            <div className=\"card-deck\">\n              {this.state.educations.map((element, key) =>\n                <div key={key} className=\"card\">\n                  <img className=\"card-img-top\" src={element.node.image.sizes.src} alt={element.node.title} />\n                  <div className=\"card-body\">\n                    <h3>{element.node.title}</h3>\n                    <div className=\"card-text\" dangerouslySetInnerHTML={{\n                      __html: element.node.description.childMarkdownRemark.html,\n                    }} />\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </section>\n\n        <section id=\"competences\" className=\"skills\">\n          <div className=\"container\">\n            <h2>Compétences</h2>\n            <hr />\n            <div className=\"text-center\">\n\n              <SkillsCloud skills={this.state.skills} />\n              <ul className='sr-only'>\n                {this.state.skills.map((element, key) =>\n                  <li key={key}>\n                    <span>{element.text}</span>\n                  </li>\n                )}\n              </ul>\n            </div>\n          </div>\n        </section>\n\n\n        <section id=\"experiences\" className=\"experiences\">\n          <div className=\"container\">\n            <h2>Expériences</h2>\n            <hr />\n\n            <div className=\"card-deck\">\n              {this.state.experiences.slice(0,3).map((element, key) =>\n                <div key={key} className=\"card\">\n                  <img className=\"card-img-top\" src={element.node.image.sizes.src} alt={element.node.title} />\n                  <div className=\"card-body\">\n                    <h3>{element.node.title}</h3>\n                    <div className=\"card-text\" dangerouslySetInnerHTML={{\n                      __html: element.node.description.childMarkdownRemark.html,\n                    }} />\n                    <div className='progress'>\n                      <div className={this.getProgressBarStyle(element)} style={this.getYearStyle(element)} role='progressbar' aria-valuenow={this.getWorkingYear(element)} aria-valuemin='0' aria-valuemax='100' >{this.getWorkingLabel(element)}</div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n          </div>\n        </section>\n\n        <section id=\"realisations\" className=\"achievments\">\n          <div className=\"container\">\n            <h2>Réalisations</h2>\n            <hr />\n            {this.state.achievments.map((element, key) =>\n              <article key={key} className=\"article\">\n                <div className=\"row\">\n                  <div className=\"col-xs-12 col-sm-12 col-md-5 col-lg-4\">\n                    <img className=\"card-img-top\" src={element.node.image.sizes.src} alt={element.node.title} />\n                  </div>\n                  <div className=\"col-xs-12 col-sm-12 col-md-7 col-lg-8\">\n                    <h3 className=\"title\">\n                      <a href={element.node.url} >{element.node.title}</a>\n                    </h3>\n                    <div className=\"text\" dangerouslySetInnerHTML={{\n                      __html: element.node.description.childMarkdownRemark.html,\n                    }} />\n\n                    <div>\n                      <strong>Mots clefs</strong> : {element.node.technologies.join(\", \")}\n                    </div>\n\n                  </div>\n                </div>\n              </article>\n            )}\n          </div>\n        </section>\n\n        <section id=\"contact\" className=\"contact\">\n          <div className=\"container\">\n            <h2>Contact</h2>\n            <hr />\n            <ContactForm messageSent={this.state.messageSent} mailTo={this.state.cv.email} redirectTo={this.state.currentURL} />\n          </div>\n        </section>\n\n      </HomeLayout>\n    );\n  }\n}\n\nexport default IndexPage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}